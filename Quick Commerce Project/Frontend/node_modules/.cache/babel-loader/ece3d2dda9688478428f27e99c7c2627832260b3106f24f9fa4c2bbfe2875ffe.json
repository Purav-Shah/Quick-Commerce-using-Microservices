{"ast":null,"code":"var _jsxFileName = \"C:\\\\Purav\\\\College\\\\SEM X\\\\Front+Back\\\\frontend\\\\src\\\\component\\\\admin\\\\AdminInventoryPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ApiService from \"../../service/ApiService\";\nimport '../../style/adminInventory.css';\nimport Pagination from \"../common/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminInventoryPage = () => {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const itemsPerPage = 10;\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage]);\n  const fetchProducts = async () => {\n    try {\n      const response = await ApiService.getAllProducts();\n      const productList = response.productList || [];\n      setProducts(productList);\n      setTotalPages(Math.ceil(productList.length / itemsPerPage));\n\n      // Fetch inventory for each product\n      const inventoryPromises = productList.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map(product => ApiService.getInventoryByProductId(product.id));\n      const inventoryResults = await Promise.all(inventoryPromises);\n      setInventory(inventoryResults);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Unable to fetch inventory');\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n  const handleQuantityChange = async (productId, change) => {\n    try {\n      await ApiService.updateInventory(productId, change);\n      setMessage('Inventory updated successfully');\n      setTimeout(() => setMessage(''), 3000);\n      fetchProducts(); // Refresh the data\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'Unable to update inventory');\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-inventory-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Current Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inventory.map((item, index) => {\n          var _products$find;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.productId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_products$find = products.find(p => p.id === item.productId)) === null || _products$find === void 0 ? void 0 : _products$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"inventory-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(item.productId, -1),\n                disabled: item.quantity <= 0,\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(item.productId, 1),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, item.productId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: page => setCurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminInventoryPage, \"MnlR0MOLnI4DvdzTAxohWxmQW6g=\");\n_c = AdminInventoryPage;\nexport default AdminInventoryPage;\nvar _c;\n$RefreshReg$(_c, \"AdminInventoryPage\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","Pagination","jsxDEV","_jsxDEV","AdminInventoryPage","_s","inventory","setInventory","products","setProducts","currentPage","setCurrentPage","totalPages","setTotalPages","message","setMessage","error","setError","itemsPerPage","fetchProducts","response","getAllProducts","productList","Math","ceil","length","inventoryPromises","slice","map","product","getInventoryByProductId","id","inventoryResults","Promise","all","_error$response","_error$response$data","data","setTimeout","handleQuantityChange","productId","change","updateInventory","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","index","_products$find","find","p","name","quantity","onClick","disabled","onPageChange","page","_c","$RefreshReg$"],"sources":["C:/Purav/College/SEM X/Front+Back/frontend/src/component/admin/AdminInventoryPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ApiService from \"../../service/ApiService\";\r\nimport '../../style/adminInventory.css';\r\nimport Pagination from \"../common/Pagination\";\r\n\r\nconst AdminInventoryPage = () => {\r\n    const [inventory, setInventory] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const itemsPerPage = 10;\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, [currentPage]);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await ApiService.getAllProducts();\r\n            const productList = response.productList || [];\r\n            setProducts(productList);\r\n            setTotalPages(Math.ceil(productList.length / itemsPerPage));\r\n            \r\n            // Fetch inventory for each product\r\n            const inventoryPromises = productList\r\n                .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\r\n                .map(product => ApiService.getInventoryByProductId(product.id));\r\n            \r\n            const inventoryResults = await Promise.all(inventoryPromises);\r\n            setInventory(inventoryResults);\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Unable to fetch inventory');\r\n            setTimeout(() => setError(''), 3000);\r\n        }\r\n    };\r\n\r\n    const handleQuantityChange = async (productId, change) => {\r\n        try {\r\n            await ApiService.updateInventory(productId, change);\r\n            setMessage('Inventory updated successfully');\r\n            setTimeout(() => setMessage(''), 3000);\r\n            fetchProducts(); // Refresh the data\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Unable to update inventory');\r\n            setTimeout(() => setError(''), 3000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-inventory-page\">\r\n            <h2>Inventory Management</h2>\r\n            {message && <div className=\"success-message\">{message}</div>}\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            \r\n            <table className=\"inventory-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product ID</th>\r\n                        <th>Product Name</th>\r\n                        <th>Current Stock</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {inventory.map((item, index) => (\r\n                        <tr key={item.productId}>\r\n                            <td>{item.productId}</td>\r\n                            <td>{products.find(p => p.id === item.productId)?.name}</td>\r\n                            <td>{item.quantity}</td>\r\n                            <td className=\"inventory-actions\">\r\n                                <button \r\n                                    onClick={() => handleQuantityChange(item.productId, -1)}\r\n                                    disabled={item.quantity <= 0}\r\n                                >-</button>\r\n                                <button \r\n                                    onClick={() => handleQuantityChange(item.productId, 1)}\r\n                                >+</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <Pagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={(page) => setCurrentPage(page)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminInventoryPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}